version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: habitsystem
      POSTGRES_PASSWORD: habitsystem
      POSTGRES_DB: habitsystem
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habitsystem"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - habit-network

  auth-service:
    build: ./auth-service
    depends_on:
      postgres:
        condition: service_healthy
      user-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/habitsystem
      SPRING_DATASOURCE_USERNAME: habitsystem
      SPRING_DATASOURCE_PASSWORD: habitsystem
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: 'true'
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_FLYWAY_ENABLED: 'true'
      GRPC_CLIENT_USER-SERVICE_ADDRESS: static://user-service:9092
      USER_SERVICE_HOST: user-service
      USER_SERVICE_PORT: 8092
      SPRING_FLYWAY_REPAIR_ON_MIGRATE: 'true'
      SPRING_FLYWAY_CLEAN_ON_VALIDATION_ERROR: 'true'
      SPRING_FLYWAY_VALIDATE_ON_MIGRATE: 'false'
      SERVER_PORT: 8091
      GRPC_SERVER_PORT: 9091
      GRPC_CLIENT_USER-SERVICE_NEGOTIATION_TYPE: PLAINTEXT
    expose:
      - "9091"
      - "8091"
    ports:
      - "8091:8091"
      - "9091:9091"
    networks:
      - habit-network

  user-service:
    build: ./user-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/habitsystem
      SPRING_DATASOURCE_USERNAME: habitsystem
      SPRING_DATASOURCE_PASSWORD: habitsystem
      GRPC_SERVER_ADDRESS: 0.0.0.0
      GRPC_SERVER_PORT: 9092
      SPRING_FLYWAY_ENABLED: 'true'
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: 'true'
      SERVER_PORT: 8092
      JAVA_TOOL_OPTIONS: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=70.0 -Dspring.output.ansi.enabled=ALWAYS"
      MANAGEMENT_HEALTH_READINESS_STATE_ENABLED: 'true'
      MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED: 'true'
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: "ALWAYS"
      MANAGEMENT_HEALTH_DEFAULTS_ENABLED: "true"
      MANAGEMENT_HEALTH_READINESSTATE_ENABLED: "true"
    expose:
      - "9092"
      - "8092"
    ports:
      - "8092:8092"
      - "9092:9092"
    networks:
      - habit-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  api-gateway:
    build: ./api-gateway
    depends_on:
      auth-service:
        condition: service_started
      user-service:
        condition: service_started
    environment:
      AUTH_SERVICE_HOST: auth-service
      AUTH_SERVICE_PORT: 8091
      USER_SERVICE_HOST: user-service
      USER_SERVICE_PORT: 8092
    ports:
      - "8080:8080"
    networks:
      - habit-network

volumes:
  postgres_data:

networks:
  habit-network:
    driver: bridge
